# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: m2c-orchestration
spec:
  workspaces:
    - name: source
  params:
    - name: gitURL
      description: The URL of the Code Repository
      type: string
    - name: gitRevision
      description: The Revision of the Code Repository
      type: string
    - name: cvsFile
      type: string
      description: Input CSV file with VM information for migration
      default: input/vm-list.csv
    - name: planPatchPath
      type: string
      description: Path to find the plan patch files
      default: input
    - name: manifestMountPath
      type: string
      description: Path where manifest templates are mounted
      default: /var/manifests
    - name: image
      type: string
      description: The image used to run the python steps. Requires Python 3.9 with PyYAML and jsonpatch packages and kubectl.
  tasks:
    - name: checkout-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.gitURL)
        - name: revision
          value: $(params.gitRevision)

    - name: orchestration
      taskRef:
        name: m2c-orchestration
      runAfter:
        - checkout-repo
      workspaces:
        - name: source
          workspace: source
      params:
        - name: cvsFile
          value: $(params.cvsFile)
        - name: manifestMountPath
          value: $(params.manifestMountPath)
        - name: planPatchPath
          value: $(params.planPatchPath)
        - name: image
          value: $(params.image)
